const projects = [
  {
    id: "pet-finder",
    emoji: "üê∂üê±",
    title: "Pet Finder ‚Äî Matching People with Pets through Data",
    summary:
      "A data-driven web platform that connects adopters with the right pets through intelligent filtering and adoption data analysis.",
    tech: ["Flask", "Python", "Pandas", "HTML", "CSS", "Web Scraping"],
    demo: "#",
    repo: "#",
    details: [
      "I created Pet Finder to help adopters find the right pet quickly and easily, while also supporting rescue organizations in placing animals more effectively. The platform enables users to filter animals by location, size, breed, age, and gender, making the adoption process both intuitive and personalized.",
      "On the backend, I used Flask to build the web application and employed Python web scraping to collect real adoption listings. Using Pandas, I analyzed adoption trends and predictors such as breed popularity, age impact, and adoption fee structures. The frontend, built with HTML and CSS, was designed to be clean and user-friendly for adopters.",
      "Pet Finder does more than assist organizations with data management ‚Äî it empowers adopters with insights and gives stray dogs and cats a better chance at finding a loving home.",
      "Highlights:",
      "- Intelligent filtering by location, size, breed, age, and gender",
      "- Backend built with Flask; frontend with HTML/CSS",
      "- Automated data collection via Python web scraping",
      "- Adoption trend analysis using Pandas (patterns & predictors)",
      "- Supports both adopters and rescue organizations with actionable insights",
      "- Strengthened my skills in full-stack development, web scraping, and data analysis",
    ],
  },
  {
    id: "healthbuddy",
    emoji: "ü©∫",
    title:
      "HealthBuddy ‚Äî A personal health CRM that logs daily metrics and visualizes progress with goal tracking",
    summary:
      "A desktop health CRM built with Java Swing and SQLite that records daily metrics (weight, BMI, steps, blood pressure, heart rate) and visualizes trends against goals.",
    tech: ["Java", "Swing", "SQLite", "JDBC", "JFreeChart", "CSV Export"],
    demo: "#",
    repo: "#",
    details: [
      "HealthBuddy is a Java Swing desktop app backed by SQLite. It lets users record weight, BMI, steps, blood pressure, heart rate, and daily habits, then visualize time-series trends with JFreeChart and export data to CSV‚Äîturning raw logs into actionable insights.",
      "I built HealthBuddy to practice end-to-end desktop application design‚Äîfrom UX flow and form validation to data modeling and analytics. Users can enter daily health data, review charts by metric and date range, and compare progress against targets (e.g., target weight).",
      "I architected the app with a clean separation between UI and persistence (SQLite via JDBC), added realistic seeded data for testing, and implemented CSV export to support external analysis and interoperability.",
      "Highlights:",
      "- Daily logging for weight, BMI, steps, blood pressure, heart rate, and habits",
      "- Goal tracking with charts that compare actual progress vs. targets",
      "- Built with Java Swing UI and SQLite storage via JDBC",
      "- Time-series visualization using JFreeChart",
      "- CSV export for analysis in Excel/Python/BI tools",
      "- Clear separation of UI, domain models, and database access; seeded demo data for quick testing",
    ],
  },
  {
    id: "flood-map-alert",
    emoji: "üåä",
    title: "Flood Map Alert ‚Äî Community-Driven Flood Safety Platform",
    summary:
      "A hackathon project built with JavaScript and Leaflet.js that helps communities report flood risks and share safety resources in real time.",
    tech: [
      "JavaScript",
      "Leaflet.js",
      "OpenStreetMap",
      "HTML",
      "CSS",
      "API Integration",
    ],
    demo: "#",
    repo: "#",
    details: [
      "During NEU‚Äôs 2024 Hackathon, I collaborated on Flood Map Alert, a web app designed to improve community resilience during extreme weather events. The platform allows users to mark safe or dangerous locations on an interactive flood risk map, helping drivers and residents quickly assess whether their area is safe.",
      "Built with JavaScript, Leaflet.js, and OpenStreetMap, the project combined front-end development with geospatial visualization and third-party API integration. It was completed in just 48 hours as part of a team challenge, where I contributed to both design and implementation.",
      "The app also featured additional community-focused modules that extended beyond mapping and emphasized accessibility of critical resources.",
      "Highlights:",
      "- Interactive flood risk map where users can mark safe and dangerous locations",
      "- Community Reports for real-time neighborhood updates",
      "- Safe Parking Finder showing available parking spots with Google Maps integration",
      "- Emergency Resources section with hotlines and shelter information",
      "- Strengthened my skills in front-end development, geospatial visualization, and API integration",
      "- Deepened my passion for building technology that supports vulnerable communities during natural disasters",
    ],
  },
  {
    id: "bali-travel-tours",
    emoji: "üå¥",
    title: "Bali Travel Tours ‚Äî Responsive Tourism Website",
    summary:
      "A modern responsive tourism website concept featuring immersive visuals, interactive navigation, and scroll-based storytelling.",
    tech: ["HTML5", "CSS3", "JavaScript", "Responsive Design", "Animations"],
    demo: "#",
    repo: "#",
    details: [
      "I designed and developed a modern, responsive website for a Bali travel agency concept. The site highlights various travel packages (Regular, Premium, Event), destinations (Ocean, Jungle, Island tours), and seasonal promotions with a strong visual emphasis through full-screen video backgrounds, hover-activated menus, and interactive text animations.",
      "This project focused on delivering an engaging, visually rich experience, tailored to the travel industry, while practicing advanced front-end techniques for layout, animation, and interactivity.",
      "Highlights:",
      "- Immersive Hero Section with looping video background and scrolling text banners",
      "- Interactive navigation with hover-triggered dropdown cards for packages and destinations",
      "- Dynamic tour sections showcasing itineraries, pricing, and booking calls-to-action",
      "- Scroll-based animations (JavaScript-driven parallax) for storytelling",
      "- Responsive design optimized for both desktop and mobile",
      "- Strengthened skills in HTML5, CSS3 (animations, transitions, responsive layouts), and vanilla JavaScript for interactive UI",
    ],
  },
  {
    id: "funzymart",
    emoji: "üß∏",
    title: "FunzyMart ‚Äî A Modern React E-commerce Website",
    summary:
      "A React (Vite) e-commerce prototype simulating a complete online shopping flow with catalog filtering, dynamic product pages, and a Context API-powered cart system.",
    tech: [
      "React",
      "Vite",
      "React Router",
      "Context API",
      "CSS (Flexbox & Grid)",
    ],
    demo: "#",
    repo: "#",
    details: [
      "I built FunzyMart, a modern toy e-commerce website developed with React (Vite), to simulate the full online shopping experience. The platform was designed with a strong focus on user experience and scalable architecture, making it both engaging for customers and maintainable for developers.",
      "On the homepage, users are greeted with a lively hero section and clear call-to-actions that lead them into the catalog. The product catalog supports category filtering, allowing shoppers to browse items such as wooden toys or stuffed animals with ease. Each product links to a dynamic detail page that displays images, specifications, and an ‚ÄúAdd to Cart‚Äù option.",
      "The shopping cart system was implemented using the React Context API, ensuring global state management and real-time updates across the application. A sleek modal-based cart UI lets users adjust quantities, remove items, and see subtotals instantly before proceeding to checkout.",
      "Built with custom CSS layouts (Flexbox and Grid), FunzyMart is fully responsive and optimized for both desktop and mobile users. Its component-based structure ‚Äî including navigation, product cards, breadcrumb navigation, and footer ‚Äî ensures scalability and reusability.",
      "Highlights:",
      "- Lively hero section with clear call-to-actions driving users into the catalog",
      "- Product catalog with category filtering and dynamic detail pages",
      "- Context API-powered shopping cart with modal UI, real-time updates, and subtotal calculations",
      "- Fully responsive design with custom CSS layouts (Flexbox & Grid)",
      "- Component-based structure (navigation, product cards, breadcrumbs, footer) for scalability and maintainability",
      "- Strengthened skills in React state management, routing, reusable component design, and responsive UI development",
    ],
  },
  {
    id: "ecom-dashboard",
    emoji: "üìä",
    title: "E-commerce Analytics Dashboard ‚Äî Full-Stack Learning Project",
    summary:
      "A full-stack MERN-style analytics dashboard for e-commerce businesses, featuring sales insights, interactive charts, and CRM-style data visualization.",
    tech: [
      "React",
      "Vite",
      "Material UI",
      "Node.js",
      "Express.js",
      "MongoDB",
      "Chart.js/ECharts",
    ],
    demo: "#",
    repo: "#",
    details: [
      "This project gave me the opportunity to explore full-stack development end-to-end. I built an analytics dashboard for e-commerce business owners, integrating a MongoDB database, a Node.js + Express.js backend, and a React + Material UI frontend.",
      "The focus was not only on building features ‚Äî such as interactive charts, product transaction data, and CRM-style dashboards ‚Äî but also on learning how data flows across the full stack: from database schema design, to RESTful API development, to responsive and modular frontend components.",
      "While the MERN stack itself is less popular today, this project was an invaluable chance to strengthen my core engineering foundations in full-stack development, preparing me to quickly adapt to modern frameworks and technologies.",
      "Highlights:",
      "- Full-stack architecture integrating MongoDB, Express.js, Node.js, and React",
      "- Backend APIs to fetch sales, revenue, and transaction data",
      "- Frontend built with React + Material UI for a modular, responsive dashboard UI",
      "- Interactive charts and data visualizations using Chart.js/ECharts",
      "- Practiced schema design, RESTful API development, and component-based front-end engineering",
      "- Strengthened my foundation in full-stack development, enabling rapid adaptation to modern frameworks (Next.js, Prisma, GraphQL, etc.)",
    ],
  },
  {
    id: "ai-portfolio",
    emoji: "üíª",
    title: "Personal Portfolio Website with AI Chatbot",
    summary:
      "A modern portfolio built with React (Vite) and Vercel, featuring an AI-powered chatbot that allows visitors to interactively learn about me, my skills, and my projects.",
    tech: ["React", "Vite", "JavaScript", "AI Chatbot API", "Vercel"],
    demo: "#",
    repo: "#",
    details: [
      "I built a personal portfolio website to showcase my projects, skills, and professional background, enhanced with an AI-powered chatbot that allows visitors to 'ask me anything about me.'",
      "Developed with React (Vite) and deployed on Vercel, the site not only highlights my professional journey but also integrates a custom AI API to create an interactive experience. Instead of passively reading, recruiters and collaborators can directly engage with the chatbot to learn about my skills, career goals, and projects in real time.",
      "Highlights:",
      "- Interactive AI chatbot that answers visitor questions with instant AI-generated responses",
      "- Modern frontend built with React (Vite) for performance and scalability",
      "- Deployed on Vercel for fast, globally accessible serverless hosting",
      "- Clean UI and responsive design optimized for desktop and mobile devices",
      "- Strengthened skills in API integration, responsive design, and frontend engineering",
    ],
  },
];

export default projects;